[tool.poetry]
name = "energy-transformer"
version = "0.1.0"
description = "PyTorch implementation of Energy Transformer"
authors = ["Ayan Das <bvits@riseup.net>"]
maintainers = [
    "Ayan Das <bvits@riseup.net>",
    "Claude Opus 4 (Anthropic)",
    "Claude Sonnet 4 (Anthropic)",
    "Claude Sonnet 3.7 (Anthropic)",
    "ChatGPT o3 (OpenAI)",
    "ChatGPT Codex (OpenAI)"
]
readme = "README.md"
license = "Apache-2.0"
repository = "https://github.com/b-vitamins/energy-transformer"
keywords = ["deep-learning", "transformers", "energy-based-models", "hopfield-networks", "simplicial-complexes"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
]

[tool.poetry.dependencies]
python = "^3.11"
torch = "2.7.0"
einops = "0.8.1"
numpy = "1.26.2"
scipy = "1.12.0"

[tool.poetry.group.dev.dependencies]
pytest = "8.3.3"
pytest-cov = "6.0.0"
pytest-xdist = "3.6.1"
mypy = "1.13.0"
ruff = "0.9.3"
types-PyYAML = "6.0.12.20240311"
PyYAML = "6.0.1"

[tool.poetry.group.examples]
optional = true

[tool.poetry.group.examples.dependencies]
torchvision = "0.22.0"
matplotlib = "3.8.2"
pillow = "11.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 80
target-version = "py311"
exclude = [
    ".venv",
    "build",
    "dist",
    "__pycache__",
    ".git",
    ".github",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    "*.egg-info",
]


[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",
    "UP",
    "B",
    "N",
    "D",
    "C90",
    "W",
    "ANN",
    "S",
    "BLE",
    "A",
    "C4",
    "DTZ",
    "ISC",
    "ICN",
    "G",
    "PIE",
    "PT",
    "RET",
    "SIM",
    "TID",
    "ARG",
    "PTH",
    "ERA",
]
ignore = [
    "E203",
    "E501",
    "D100",
    "D104",
    "N999",
    "S101",
    "PLR0913",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "ANN", "S101", "PLR2004", "PLR0915"]
"examples/*.py" = ["D", "ANN", "T201"]
"benchmarks/*.py" = ["D", "ANN"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true

[tool.ruff.lint.flake8-import-conventions.aliases]
"numpy" = "np"
"pandas" = "pd"
"seaborn" = "sns"
"matplotlib.pyplot" = "plt"
"torch.nn.functional" = "F"

[tool.ruff.lint.pylint]
max-args = 8
max-branches = 12
max-returns = 6
max-statements = 50

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
strict = true
ignore_missing_imports = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_incomplete_defs = true
warn_unused_ignores = false
no_implicit_reexport = false

[[tool.mypy.overrides]]
module = ["torch", "torch.*", "torchvision", "torchvision.*", "scipy", "scipy.*"]
ignore_errors = true

[[tool.mypy.overrides]]
module = ["energy_transformer.*"]
strict = true
ignore_errors = false
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = ["tests.*", "examples.*"]
ignore_errors = true
warn_unused_ignores = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["energy_transformer"]
omit = ["*/tests/*", "*/examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]